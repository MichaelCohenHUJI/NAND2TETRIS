
function Main.fibonacci 0

| RAM[0] |RAM[272]|RAM[273]|RAM[274]|RAM[275]|RAM[276]|RAM[277]|RAM[278]|RAM[279]|
|    492 |    251 |   -273 |    266 |      0 |     -2 |    251 |   -278 |    271 |

push argument 0

| RAM[0] |RAM[272]|RAM[273]|RAM[274]|RAM[275]|RAM[276]|RAM[277]|RAM[278]|RAM[279]|
|    492 |    251 |   -273 |    266 |      0 |     -2 |    251 |   -278 |    271 |

push constant 2

| RAM[0] |RAM[272]|RAM[273]|RAM[274]|RAM[275]|RAM[276]|RAM[277]|RAM[278]|RAM[279]|
|    492 |    251 |   -273 |    266 |      0 |     -2 |    251 |   -278 |    271 |

lt                     // checks if n<2

| RAM[0] |RAM[272]|RAM[273]|RAM[274]|RAM[275]|RAM[276]|RAM[277]|RAM[278]|RAM[279]|
|    492 |    251 |   -273 |    266 |      0 |     -2 |    251 |   -278 |    271 |

if-goto IF_TRUE

| RAM[0] |RAM[272]|RAM[273]|RAM[274]|RAM[275]|RAM[276]|RAM[277]|RAM[278]|RAM[279]|
|    492 |    251 |   -273 |    266 |      0 |     -2 |    251 |   -278 |    271 |

goto IF_FALSE

| RAM[0] |RAM[272]|RAM[273]|RAM[274]|RAM[275]|RAM[276]|RAM[277]|RAM[278]|RAM[279]|
|    492 |    251 |   -273 |    266 |      0 |     -2 |    251 |   -278 |    271 |

label IF_TRUE          // if n<2, return n

| RAM[0] |RAM[272]|RAM[273]|RAM[274]|RAM[275]|RAM[276]|RAM[277]|RAM[278]|RAM[279]|
|    492 |    251 |   -273 |    266 |      0 |     -2 |    251 |   -278 |    271 |

push argument 0

| RAM[0] |RAM[272]|RAM[273]|RAM[274]|RAM[275]|RAM[276]|RAM[277]|RAM[278]|RAM[279]|
|    492 |    251 |   -273 |    266 |      0 |     -2 |    251 |   -278 |    271 |

return

| RAM[0] |RAM[272]|RAM[273]|RAM[274]|RAM[275]|RAM[276]|RAM[277]|RAM[278]|RAM[279]|
|    492 |    251 |   -273 |    266 |      0 |     -2 |    251 |   -278 |    271 |

label IF_FALSE         // if n>=2, returns fib(n-2)+fib(n-1)

| RAM[0] |RAM[272]|RAM[273]|RAM[274]|RAM[275]|RAM[276]|RAM[277]|RAM[278]|RAM[279]|
|    492 |    251 |   -273 |    266 |      0 |     -2 |    251 |   -278 |    271 |

push argument 0

| RAM[0] |RAM[272]|RAM[273]|RAM[274]|RAM[275]|RAM[276]|RAM[277]|RAM[278]|RAM[279]|
|    492 |    251 |   -273 |    266 |      0 |     -2 |    251 |   -278 |    271 |

push constant 2

| RAM[0] |RAM[272]|RAM[273]|RAM[274]|RAM[275]|RAM[276]|RAM[277]|RAM[278]|RAM[279]|
|    492 |    251 |   -273 |    266 |      0 |     -2 |    251 |   -278 |    271 |

sub

| RAM[0] |RAM[272]|RAM[273]|RAM[274]|RAM[275]|RAM[276]|RAM[277]|RAM[278]|RAM[279]|
|    492 |    251 |   -273 |    266 |      0 |     -2 |    251 |   -278 |    271 |

call Main.fibonacci 1  // computes fib(n-2)

| RAM[0] |RAM[272]|RAM[273]|RAM[274]|RAM[275]|RAM[276]|RAM[277]|RAM[278]|RAM[279]|
|    492 |    251 |   -273 |    266 |      0 |     -2 |    251 |   -278 |    271 |

push argument 0

| RAM[0] |RAM[272]|RAM[273]|RAM[274]|RAM[275]|RAM[276]|RAM[277]|RAM[278]|RAM[279]|
|    492 |    251 |   -273 |    266 |      0 |     -2 |    251 |   -278 |    271 |

push constant 1

| RAM[0] |RAM[272]|RAM[273]|RAM[274]|RAM[275]|RAM[276]|RAM[277]|RAM[278]|RAM[279]|
|    492 |    251 |   -273 |    266 |      0 |     -2 |    251 |   -278 |    271 |

sub

| RAM[0] |RAM[272]|RAM[273]|RAM[274]|RAM[275]|RAM[276]|RAM[277]|RAM[278]|RAM[279]|
|    492 |    251 |   -273 |    266 |      0 |     -2 |    251 |   -278 |    271 |

call Main.fibonacci 1  // computes fib(n-1)

| RAM[0] |RAM[272]|RAM[273]|RAM[274]|RAM[275]|RAM[276]|RAM[277]|RAM[278]|RAM[279]|
|    492 |    251 |   -273 |    266 |      0 |     -2 |    251 |   -278 |    271 |

add                    // returns fib(n-1) + fib(n-2)

| RAM[0] |RAM[272]|RAM[273]|RAM[274]|RAM[275]|RAM[276]|RAM[277]|RAM[278]|RAM[279]|
|    492 |    251 |   -273 |    266 |      0 |     -2 |    251 |   -278 |    271 |

return

| RAM[0] |RAM[272]|RAM[273]|RAM[274]|RAM[275]|RAM[276]|RAM[277]|RAM[278]|RAM[279]|
|    492 |    251 |   -273 |    266 |      0 |     -2 |    251 |   -278 |    271 |
