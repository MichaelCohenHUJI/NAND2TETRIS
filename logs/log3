
function Main.fibonacci 0

| RAM[0] |RAM[280]|RAM[281]|RAM[282]|RAM[283]|RAM[284]|RAM[285]|RAM[286]|RAM[287]|
|    492 |      0 |     -4 |    251 |   -283 |    276 |      0 |     -6 |    251 |

push argument 0

| RAM[0] |RAM[280]|RAM[281]|RAM[282]|RAM[283]|RAM[284]|RAM[285]|RAM[286]|RAM[287]|
|    492 |      0 |     -4 |    251 |   -283 |    276 |      0 |     -6 |    251 |

push constant 2

| RAM[0] |RAM[280]|RAM[281]|RAM[282]|RAM[283]|RAM[284]|RAM[285]|RAM[286]|RAM[287]|
|    492 |      0 |     -4 |    251 |   -283 |    276 |      0 |     -6 |    251 |

lt                     // checks if n<2

| RAM[0] |RAM[280]|RAM[281]|RAM[282]|RAM[283]|RAM[284]|RAM[285]|RAM[286]|RAM[287]|
|    492 |      0 |     -4 |    251 |   -283 |    276 |      0 |     -6 |    251 |

if-goto IF_TRUE

| RAM[0] |RAM[280]|RAM[281]|RAM[282]|RAM[283]|RAM[284]|RAM[285]|RAM[286]|RAM[287]|
|    492 |      0 |     -4 |    251 |   -283 |    276 |      0 |     -6 |    251 |

goto IF_FALSE

| RAM[0] |RAM[280]|RAM[281]|RAM[282]|RAM[283]|RAM[284]|RAM[285]|RAM[286]|RAM[287]|
|    492 |      0 |     -4 |    251 |   -283 |    276 |      0 |     -6 |    251 |

label IF_TRUE          // if n<2, return n

| RAM[0] |RAM[280]|RAM[281]|RAM[282]|RAM[283]|RAM[284]|RAM[285]|RAM[286]|RAM[287]|
|    492 |      0 |     -4 |    251 |   -283 |    276 |      0 |     -6 |    251 |

push argument 0

| RAM[0] |RAM[280]|RAM[281]|RAM[282]|RAM[283]|RAM[284]|RAM[285]|RAM[286]|RAM[287]|
|    492 |      0 |     -4 |    251 |   -283 |    276 |      0 |     -6 |    251 |

return

| RAM[0] |RAM[280]|RAM[281]|RAM[282]|RAM[283]|RAM[284]|RAM[285]|RAM[286]|RAM[287]|
|    492 |      0 |     -4 |    251 |   -283 |    276 |      0 |     -6 |    251 |

label IF_FALSE         // if n>=2, returns fib(n-2)+fib(n-1)

| RAM[0] |RAM[280]|RAM[281]|RAM[282]|RAM[283]|RAM[284]|RAM[285]|RAM[286]|RAM[287]|
|    492 |      0 |     -4 |    251 |   -283 |    276 |      0 |     -6 |    251 |

push argument 0

| RAM[0] |RAM[280]|RAM[281]|RAM[282]|RAM[283]|RAM[284]|RAM[285]|RAM[286]|RAM[287]|
|    492 |      0 |     -4 |    251 |   -283 |    276 |      0 |     -6 |    251 |

push constant 2

| RAM[0] |RAM[280]|RAM[281]|RAM[282]|RAM[283]|RAM[284]|RAM[285]|RAM[286]|RAM[287]|
|    492 |      0 |     -4 |    251 |   -283 |    276 |      0 |     -6 |    251 |

sub

| RAM[0] |RAM[280]|RAM[281]|RAM[282]|RAM[283]|RAM[284]|RAM[285]|RAM[286]|RAM[287]|
|    492 |      0 |     -4 |    251 |   -283 |    276 |      0 |     -6 |    251 |

call Main.fibonacci 1  // computes fib(n-2)

| RAM[0] |RAM[280]|RAM[281]|RAM[282]|RAM[283]|RAM[284]|RAM[285]|RAM[286]|RAM[287]|
|    492 |      0 |     -4 |    251 |   -283 |    276 |      0 |     -6 |    251 |

push argument 0

| RAM[0] |RAM[280]|RAM[281]|RAM[282]|RAM[283]|RAM[284]|RAM[285]|RAM[286]|RAM[287]|
|    492 |      0 |     -4 |    251 |   -283 |    276 |      0 |     -6 |    251 |

push constant 1

| RAM[0] |RAM[280]|RAM[281]|RAM[282]|RAM[283]|RAM[284]|RAM[285]|RAM[286]|RAM[287]|
|    492 |      0 |     -4 |    251 |   -283 |    276 |      0 |     -6 |    251 |

sub

| RAM[0] |RAM[280]|RAM[281]|RAM[282]|RAM[283]|RAM[284]|RAM[285]|RAM[286]|RAM[287]|
|    492 |      0 |     -4 |    251 |   -283 |    276 |      0 |     -6 |    251 |

call Main.fibonacci 1  // computes fib(n-1)

| RAM[0] |RAM[280]|RAM[281]|RAM[282]|RAM[283]|RAM[284]|RAM[285]|RAM[286]|RAM[287]|
|    492 |      0 |     -4 |    251 |   -283 |    276 |      0 |     -6 |    251 |

add                    // returns fib(n-1) + fib(n-2)

| RAM[0] |RAM[280]|RAM[281]|RAM[282]|RAM[283]|RAM[284]|RAM[285]|RAM[286]|RAM[287]|
|    492 |      0 |     -4 |    251 |   -283 |    276 |      0 |     -6 |    251 |

return

| RAM[0] |RAM[280]|RAM[281]|RAM[282]|RAM[283]|RAM[284]|RAM[285]|RAM[286]|RAM[287]|
|    492 |      0 |     -4 |    251 |   -283 |    276 |      0 |     -6 |    251 |
